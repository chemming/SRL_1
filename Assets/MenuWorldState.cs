//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;
using System.Collections.Generic;

public class MenuWorldState : IWorldState
{
	bool isShown;
	GameObject background;
	GameObject menuCam;
	MainMenu menuSystem;

	List<GameObject> menuObjects;

	public  MenuWorldState ()
	{
		menuObjects = new List<GameObject> ();
	}
	
	public void Create()
	{
		//menuObjects.Add(CreateObject("SpaceSceneMenu", "Menu/SpaceSceneMenu"));
		GameObject root = new GameObject ();
		GameObject cam = CreateObject ("MenuCamera", "Menu/MenuCamera");

		GameObject newObj;
		menuCam = cam;
		root.transform.position = cam.transform.position;
		root.transform.rotation = cam.transform.rotation;

		cam.transform.parent = root.transform;
		root.name = "MenuRoot";
		menuObjects.Add(root);
		menuObjects.Add(cam);

		newObj = CreateObject ("NewGame", "Menu/NewGame"); newObj.transform.parent = root.transform;
		menuObjects.Add(newObj);
		newObj = CreateObject ("Continue", "Menu/Continue"); newObj.transform.parent = root.transform;
		menuObjects.Add(newObj);
		newObj = CreateObject ("SaveQuit", "Menu/SaveQuit"); newObj.transform.parent = root.transform;
		menuObjects.Add(newObj);
		newObj = CreateObject ("SpaceSceneMenu", "Menu/SpaceSceneMenu"); newObj.transform.parent = root.transform;
		menuObjects.Add(newObj);

		//Set up the menu instance
		newObj = CreateObject ("SRLName", "Menu/SRLName"); newObj.transform.parent = root.transform;
		menuObjects.Add(newObj);
		menuSystem = newObj.GetComponent<MainMenu>();

		isShown = true;

	}
	
	public void Teardown()
	{
		foreach(GameObject obj in menuObjects)
		{
			GameObject.Destroy( obj);
		}
	}
	
	public void Pause()
	{
		menuSystem.enabled = false;

	}
	public void Run()
	{
		menuSystem.enabled = true;

	}
	
	public void Hide()
	{
		menuCam.GetComponent<Camera>().depth = -1; // Hide
		isShown = false;
		menuSystem.enabled = false;

		foreach(GameObject obj in menuObjects)
		{
			if(obj != null)
			{
				if(obj.GetComponent<Renderer>() != null)
					obj.GetComponent<Renderer>().enabled = false;
			}
		}

	}
	
	public void Show(bool isOverlay)
	{
		Cursor.visible = true;
		menuSystem.enabled = true;

		menuCam.GetComponent<Camera>().depth = 10000; 

		isShown = true;
		foreach(GameObject obj in menuObjects)
		{
			if(obj.GetComponent<Renderer>() != null)
				obj.GetComponent<Renderer>().enabled = true;
		}

		if (isOverlay && background!= null && background.GetComponent<Renderer>() != null)
			background.GetComponent<Renderer>().enabled = false;
	}

	private GameObject CreateObject(string name, string path)
	{
		GameObject newObj;
		newObj = GameObject.Instantiate (Resources.Load (path)) as GameObject;
		newObj.name = name;
		return newObj;
	}

	public void Update()
	{
		
	}
}

